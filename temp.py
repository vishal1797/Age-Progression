# -*- coding: utf-8 -*-
"""temp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1llAmSVFNhZFZoY3c-vikMXrOboVglSZX
"""



import matplotlib.pyplot as plt
import numpy as np
from PIL import Image  # Use PIL for image saving
import tensorflow as tf

def showimagefrombatch(i):
    rec_imgs = sess.run(generated_images, feed_dict={images: batch})
    plt.figure()
    plt.subplot(1, 2, 1)
    plt.imshow(np.reshape(batch[i], [64, 64]))
    plt.subplot(1, 2, 2)
    plt.imshow(rec_imgs[i, :, :, 0])

def savebatchbase():
    reshaped_vis = visualization.reshape(batch_size, 128, 128)
    merged_image = merge(reshaped_vis[:64], [8, 8])
    merged_image = (merged_image * 255).astype(np.uint8)  # Assuming values are in [0, 1]
    img = Image.fromarray(merged_image)
    img.save("results/base.jpg")

def savebatchepoch():
    generated_test = sess.run(generated_images, feed_dict={images: visualization})
    generated_test = generated_test.reshape(batch_size, 128, 128)
    merged_image = merge(generated_test[:64], [8, 8])
    merged_image = (merged_image * 255).astype(np.uint8)  # Assuming values are in [0, 1]
    img = Image.fromarray(merged_image)
    img.save(f"results/{epoch}.jpg")